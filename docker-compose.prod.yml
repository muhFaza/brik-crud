version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: myapp_postgres_prod
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/01-init.sql
    ports:
      - "127.0.0.1:5432:5432"  # Only allow local connections
    networks:
      - app-network
    restart: unless-stopped
    env_file:
      - .env

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: myapp_backend_prod
    environment:
      NODE_ENV: ${NODE_ENV}
      PORT: ${PORT}
      JWT_SECRET: ${JWT_SECRET}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${POSTGRES_DB}
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "127.0.0.1:3000:3000"  # Only allow local connections
    depends_on:
      - postgres
    networks:
      - app-network
    restart: unless-stopped
    env_file:
      - .env

  # Frontend with Nginx
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: myapp_frontend_prod
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    networks:
      - app-network
    restart: unless-stopped
    volumes:
      - ./nginx/ssl:/etc/nginx/ssl:ro  # For SSL certificates

volumes:
  postgres_data_prod:

networks:
  app-network:
    driver: bridge
